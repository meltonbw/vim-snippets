snippet ass "Continuous assignment" b
assign $1 = ${VISUAL}$2;
endsnippet

snippet tern "Ternary operator" !b
$1 ? $2 : $3
endsnippet

snippet if "If statement" b
if ($1) begin
	${VISUAL}$2
end
endsnippet

snippet ife "If/else statement" b
if ($1) begin
	${VISUAL}$2
end
else begin
	$3
end
endsnippet

snippet ifeif "If/else/if statement" b
if ($1) begin
	${VISUAL}$2
end
else if ($3) begin
	$4
end
endsnippet

snippet eif "Else/if statement" b
else if ($1) begin
	${VISUAL}$2
end
endsnippet

snippet el "Else statement" b
else begin
	${VISUAL}$1
end
endsnippet

snippet wh "While loop" b
while ($1) begin
	${VISUAL}$2
end
endsnippet

snippet rep "Repeat loop" b
repeat (${1:/*iterations*/}) begin
	${VISUAL}$2
end
endsnippet

snippet case "Case(z,x) statement" b
${1|case,casez,casex|} ($2)
	$3: $5
	$4: $6
	default: $7
endcase
endsnippet

snippet al "Always block" b
always @($1) begin
	${VISUAL}$2
end
endsnippet

snippet mod "Module definition" b
module ${1:`!p snip.rv = snip.basename`} #(
	${2:parameter MY_PARAM = 0,}
) (
	${3:|input,output,inout|} ${4:|logic,wire,reg|} $5
);

	${VISUAL}$0

endmodule : $1
endsnippet

snippet imod "Module instance" b
${1:/*module*/} #(
	${2:.PARAM_NAME (),}
) u_$3 (
	.$4 ( $5 )
);
endsnippet

snippet for "For loop" b
for (int ${2:i} = 0; $2 < $1; $2${3:++}) begin
	${VISUAL}$4
end
endsnippet

snippet forev "Forever loop" b
forever begin
	${VISUAL}$0
end
endsnippet

snippet fun "Function definition" b
function ${1:void} ${2:/*name*/} (
	${3:|input,output|} ${4:|logic,wire,reg|} $5
);
	${VISUAL}$0
endfunction : $2
endsnippet

snippet task "Task block" b
task ${1:/*name*/}($2);
	${VISUAL}$3
endtask : $1
endsnippet

snippet ini "Initial block" b
initial begin
	${VISUAL}$1
end
endsnippet

snippet beg "Begin/end block" !b
begin
	${VISUAL}$1
end
endsnippet
